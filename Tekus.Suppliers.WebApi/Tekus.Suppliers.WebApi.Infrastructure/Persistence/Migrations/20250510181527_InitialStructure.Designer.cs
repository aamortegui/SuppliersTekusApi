// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tekus.Suppliers.WebApi.Infrastructure;

#nullable disable

namespace Tekus.Suppliers.WebApi.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ServiceSuppliersDBContext))]
    [Migration("20250510181527_InitialStructure")]
    partial class InitialStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.CustomField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("CustomFields");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceHour")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.ServiceCountry", b =>
                {
                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ServiceId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("ServiceCountries");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.SupplierService", b =>
                {
                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SupplierId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("SupplierServices");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.CustomField", b =>
                {
                    b.HasOne("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Supplier", "Supplier")
                        .WithMany("CustomFields")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.ServiceCountry", b =>
                {
                    b.HasOne("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Country", "Country")
                        .WithMany("ServiceCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Service", "Service")
                        .WithMany("ServiceCountries")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.SupplierService", b =>
                {
                    b.HasOne("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Service", "Service")
                        .WithMany("SupplierServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Supplier", "Supplier")
                        .WithMany("SupplierServices")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Country", b =>
                {
                    b.Navigation("ServiceCountries");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Service", b =>
                {
                    b.Navigation("ServiceCountries");

                    b.Navigation("SupplierServices");
                });

            modelBuilder.Entity("Tekus.Suppliers.WebApi.Infrastructure.Persistence.Entities.Supplier", b =>
                {
                    b.Navigation("CustomFields");

                    b.Navigation("SupplierServices");
                });
#pragma warning restore 612, 618
        }
    }
}
